import { Container } from "inversify";

//TYPES
import {
  TYPES_APPOINTMENT_CONTROLLER,
  TYPES_AUTH_CONTROLLER,
  TYPES_BOOKING_CONTROLLER,
  TYPES_CHAT_CONTROLLER,
  TYPES_DASHBOARD_CONTROLLER,
  TYPES_PLATFORM_CONTROLLER,
  TYPES_PLAYLIST_CONTROLLER,
  TYPES_SUBSCRIPTION_CONTROLLER,
  TYPES_TRAINER_CONTROLLER,
  TYPES_USER_CONTROLLER,
  TYPES_VIDEO_CONTROLLER,
  TYPES_VIDEOCALLLOG_CONTROLLER,
  TYPES_WORKOUT_CONTROLLER,
} from "./types-controllers";

import {
  TYPES_APPOINTMENT_USECASES,
  TYPES_AUTH_USECASES,
  TYPES_BOOKINGSLOT_USECASAES,
  TYPES_CHAT_USECASES,
  TYPES_DASHBOARD_USECASES,
  TYPES_PLATFORM_USECASES,
  TYPES_PLAYLIST_USECASES,
  TYPES_SUBSCRIPTION__USECASES,
  TYPES_TRAINER_USECASES,
  TYPES_USER_USECASES,
  TYPES_VIDEO_USECASES,
  TYPES_VIDEO_CALL_LOG_USECASES,
  TYPES_WORKOUT_USECASES,
} from "./types-usecases";
import { TYPES_SERVICES } from "./types-services";
import { TYPES_REPOSITORIES } from "./types-repositories";

import {
  UserRepository,
  TrainerRepository,
  SubscriptionRepository,
  UserSubscriptionPlanRepository,
  RevenueRepository,
  PasswordResetRepository,
  OtpRepository,
  ChatRepository,
  ConversationRepository,
  PlayListRepository,
  VideoRepository,
  VideoPlayListRepository,
  WorkoutRepository,
  BookingSlotRepository,
  AppointmentRepository,
  VideoCallLogRepository,
} from "./file-imports-index";

// Services
import {
  StripePaymentService,
  JwtService,
  CloudinaryService,
  GoogleAuthService,
  EmailService,
  OTPService,
  EncryptionService,
  HashService,
  DateService,
} from "./file-imports-index";

// Use Cases
import {
  GetPlatformEarningsUsecase,
  GetTrainerSubscriptionsUseCase,
  TrainerApprovalUseCase,
  AdminDashBoardUseCase,
  CreateUserUseCase,
  SigninUserUseCase,
  OtpUseCase,
  GoogleAuthUseCase,
  CreateTrainerUseCase,
  UpdateTrainerProfileUseCase,
  TokenUseCase,
  CreateSubscriptionUseCase,
  EditSubscriptionUseCase,
  DeleteSubscriptionUseCase,
  SubscriptionBlockUseCase,
  CheckSubscriptionStatusUseCase,
  WebHookHandlerUseCase,
  CreateVideoUseCase,
  EditVideoUseCase,
  UpdateVideoPrivacyUseCase,
  GetVideosUseCase,
  CreateWorkoutUseCase,
  GetWorkoutUseCase,
  BookAppointmentUseCase,
  GetTrainerVideoCallLogUseCase,
  GetUserVideoCallLogUseCase,
  GetTrainerSubscribersUseCase,
  DeleteWorkoutUseCase,
  CompleteWorkoutUseCase,
  GetChatHistoryUseCase,
  GetTrainerChatListUseCase,
  GetUserChatListUseCase,
  GetUsersUseCase,
  GetUserDetailsUseCase,
  UpdateUserBlockStatusUseCase,
  GetTrainerDetailsUseCase,
  GetTrainerAndSubInfoUseCase,
  GetTrainersUseCase,
  GetUserTrainerslistUseCase,
  VerifySubcriptionSessionUseCase,
} from "./file-imports-index";

// Controllers
import {
  AdminDashboardController,
  ChatController,
  GetApprovedTrainersController,
  PurchaseSubscriptionController,
  GetUserSubscriptionController,
  WebhookController,
  SubscriptionPlanController,
  GetTrainerSubscribersController,
  GetTrainerSubscriptionController,
  VerifySubscriptionController,
  CancelSubscriptionController,
  CheckSubscriptionStatusController,
  SignUpTrainerController,
  SignUpUserController,
  UpdateTrainerProfileController,
  SignInController,
  RefreshAccessTokenController,
  SignOutController,
  GetAllVideosController,
  GetPublicVideosController,
  GetVideoDetailsController,
  GetPublicVideoDetailsController,
  ChangePasswordController,
  ForgotPasswordController,
  PasswordResetLinkController,
  UpdateUserProfileController,
  GetTrainerSchedulesController,
  CancelAppointmentController,
  GetPendingSlotsController,
  GetAllPendingSlotsController,
  GetUpComingSlotsController,
  GetAllPlaylistController,
  CreatePlaylistController,
  EditPlaylistController,
  GetPlaylistController,
  UpdatePlaylistPrivacyController,
} from "./file-imports-index";

const container = new Container();

container.bind(TYPES_REPOSITORIES.UserRepository).to(UserRepository);
